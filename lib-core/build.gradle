apply plugin: 'com.android.library'
android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner rootProject.ext.dependencies["androidJUnitRunner"]
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile(rootProject.ext.dependencies["cardview-v7"]) {
        exclude module: 'support-annotations'
    }
    provided rootProject.ext.dependencies["javax.annotation"]
    compile rootProject.ext.dependencies["progressmanager"]
    compile rootProject.ext.dependencies["retrofit-url-manager"]
    compile rootProject.ext.dependencies["arouter-api"]
    compile rootProject.ext.dependencies["paginate"]
    testCompile rootProject.ext.dependencies["junit"]
    debugCompile rootProject.ext.dependencies["canary-debug"]
    releaseCompile rootProject.ext.dependencies["canary-release"]
    testCompile rootProject.ext.dependencies["canary-release"]
    // mvparms
    //compile project(':lib-mvparms')
    compile rootProject.ext.dependencies["mvparms"]
    //atlas的依赖
    compile(rootProject.ext.dependencies["atlas-core"]) {
        transitive = true
    }
    compile (rootProject.ext.dependencies["atlas-update"]) {
        exclude module: 'atlas_core'
        exclude module: 'rxjava'
        exclude module: 'reactive-streams'
    }
}
